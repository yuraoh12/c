// 배열 포인터
	
	int a = 10;
	int* ptr_a = &a;

	printf("ptr_a : %d\n", ptr_a);
	printf("ptr_a + 1 : %d\n", ptr_a + 1);

	
	//결과
	ptr_a : 53476532
	ptr_a + 1 : 53476536
	

	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };

	for (int i = 0; i < 10; i++) {

		printf("&arr[%d] = %d\n", i, &arr[i]);

	}
	
	//결과
	&arr[0] = 2057042536
	&arr[1] = 2057042540
	&arr[2] = 2057042544
	&arr[3] = 2057042548
	&arr[4] = 2057042552
	&arr[5] = 2057042556
	&arr[6] = 2057042560
	&arr[7] = 2057042564
	&arr[8] = 2057042568
	&arr[9] = 2057042572
	


	printf("arr = %d\n", arr);
	
//	결과
	arr = -977536216
	&arr[0] = -977536216
	
	
	// arr은 arr[0]
	// arr + 1
	// arr + 1 = arr[0] + 1
	// arr[1]
	

	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };

	for (int i = 0; i < 10; i++) {
		printf("&arr[%d] = %d\n", i, &arr[i]);
		printf("arr + %d = %d\n", i, arr + i);
	}
	
	
	//결과
	&arr[0] = -621480504
	arr + 0 = -621480504
	&arr[1] = -621480500
	arr + 1 = -621480500
	&arr[2] = -621480496
	arr + 2 = -621480496
	&arr[3] = -621480492
	arr + 3 = -621480492
	&arr[4] = -621480488
	arr + 4 = -621480488
	&arr[5] = -621480484
	arr + 5 = -621480484
	&arr[6] = -621480480
	arr + 6 = -621480480
	&arr[7] = -621480476
	arr + 7 = -621480476
	&arr[8] = -621480472
	arr + 8 = -621480472
	&arr[9] = -621480468
	arr + 9 = -621480468
	*/

	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };

	for (int i = 0; i < 10; i++) {
		printf("%d ", arr[i]);
	}

	printf("\n");

	for (int j = 0; j < 10; j++) {
		printf("%d ", *(arr + j));
	}

	printf("\n");

	for (int* ptr = arr; ptr < arr + 10; ptr++) {

		printf("%d ", *ptr);

	}


//배열 포인터
	int a[10];
	printf("%d\n", a);
	printf("%d\n", &a);
	printf("%d\n", &a[0]);

	int arr[3] = { 1,2,3 };
	int* ptr = arr;

	for (int i = 0; i < 3; i++) {
		printf("%d", *(ptr + i));
	}

	printf("\n");

	for (int j = 0; j < 3; j++) {
		printf("%d", arr[j]);
	}

	printf("\n");

	// arr[i] == *(arr + i) == *(ptr + i) == *(i + ptr) == i[ptr]
	for (int k = 0; k < 3; k++) {
		printf("%d", k[ptr]);
	}
	int arr[3] = { 1,2,3 };
	printf("arr = %d\n", arr);
	printf("arr + 1 = %d\n", arr + 1); // 4

	printf("&arr = %d\n", &arr);
	printf("&arr + 1 = %d\n", &arr + 1); // 12
	// &arr + 1 == &arr에 sizeof(arr)을 더한 값이 된다.

	/*
	결과
	arr = 454424552
	arr + 1 = 454424556
	&arr = 454424552
	&arr + 1 = 454424564
	*/
//배열 포인터 선언

//포인터의 자료형 (*포인터 변수 명)[배열의 크기];

int(*ptr_arr)[3]; // 길이가 3인 int형 배열을 가리키는 포인터 선언

//배열 포인터 할당

ptr_arr = &arr;

//배열 포인터 초기화

int(*ptr_arr_2)[3] = &arr;

//포인터가 가리키는 배열에 접근하고자 한다면 *붙이기

*ptr_arr;

*ptr_arr == &arr[0]

	for (int i = 0; i < 3; i++) {
		printf("%d\n", (*ptr_arr)[i]); // ptr이 가리키는 배열의 i번 칸
	}

	int a[10] = { 1,2,3,4,5,6,7,8,9,10 };
	int(*ptr_a)[10] = &a;

	for (int j = 0; j < 10; j++) {
		printf("%d ", (*ptr_a)[j]);
	}

	int a = 5;
	int arr[3] = { 1,2,3 };

	int* ptr = &arr;                  // int를 가리키는 포인터는 int배열을 가리킬 수 없다.
	int(*ptr_arr)[3] = &a;         // int배열을 가리키는 포인터는 int를 가리킬 수 없다.
	char(*ptr_ch)[3] = &arr; 
